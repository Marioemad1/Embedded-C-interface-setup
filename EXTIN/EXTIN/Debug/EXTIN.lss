
EXTIN.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000440  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800060  00800060  00000440  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000440  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000470  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  000004ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bce  00000000  00000000  000005c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000713  00000000  00000000  00001192  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007b4  00000000  00000000  000018a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000298  00000000  00000000  0000205c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004bf  00000000  00000000  000022f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000897  00000000  00000000  000027b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  0000304a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <__vector_1>
   8:	0c 94 78 01 	jmp	0x2f0	; 0x2f0 <__vector_2>
   c:	0c 94 9f 01 	jmp	0x33e	; 0x33e <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a6 36       	cpi	r26, 0x66	; 102
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 cf 01 	call	0x39e	; 0x39e <main>
  74:	0c 94 e4 01 	jmp	0x3c8	; 0x3c8 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_SetPinDirection>:
		{
			SET_BIT(PORTD,PinId);
		}
		else if(DIO_PIN_LOW == PinValue)
		{
			CLR_BIT(PORTD,PinId);
  7c:	81 30       	cpi	r24, 0x01	; 1
  7e:	11 f1       	breq	.+68     	; 0xc4 <DIO_SetPinDirection+0x48>
  80:	30 f0       	brcs	.+12     	; 0x8e <DIO_SetPinDirection+0x12>
  82:	82 30       	cpi	r24, 0x02	; 2
  84:	d1 f1       	breq	.+116    	; 0xfa <DIO_SetPinDirection+0x7e>
  86:	83 30       	cpi	r24, 0x03	; 3
  88:	09 f4       	brne	.+2      	; 0x8c <DIO_SetPinDirection+0x10>
  8a:	52 c0       	rjmp	.+164    	; 0x130 <DIO_SetPinDirection+0xb4>
  8c:	08 95       	ret
  8e:	41 30       	cpi	r20, 0x01	; 1
  90:	59 f4       	brne	.+22     	; 0xa8 <DIO_SetPinDirection+0x2c>
  92:	2a b3       	in	r18, 0x1a	; 26
  94:	81 e0       	ldi	r24, 0x01	; 1
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	02 c0       	rjmp	.+4      	; 0x9e <DIO_SetPinDirection+0x22>
  9a:	88 0f       	add	r24, r24
  9c:	99 1f       	adc	r25, r25
  9e:	6a 95       	dec	r22
  a0:	e2 f7       	brpl	.-8      	; 0x9a <DIO_SetPinDirection+0x1e>
  a2:	82 2b       	or	r24, r18
  a4:	8a bb       	out	0x1a, r24	; 26
  a6:	08 95       	ret
  a8:	41 11       	cpse	r20, r1
  aa:	5c c0       	rjmp	.+184    	; 0x164 <DIO_SetPinDirection+0xe8>
  ac:	2a b3       	in	r18, 0x1a	; 26
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <DIO_SetPinDirection+0x3c>
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <DIO_SetPinDirection+0x38>
  bc:	80 95       	com	r24
  be:	82 23       	and	r24, r18
  c0:	8a bb       	out	0x1a, r24	; 26
  c2:	08 95       	ret
  c4:	41 30       	cpi	r20, 0x01	; 1
  c6:	59 f4       	brne	.+22     	; 0xde <DIO_SetPinDirection+0x62>
  c8:	27 b3       	in	r18, 0x17	; 23
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <DIO_SetPinDirection+0x58>
  d0:	88 0f       	add	r24, r24
  d2:	99 1f       	adc	r25, r25
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <DIO_SetPinDirection+0x54>
  d8:	82 2b       	or	r24, r18
  da:	87 bb       	out	0x17, r24	; 23
  dc:	08 95       	ret
  de:	41 11       	cpse	r20, r1
  e0:	41 c0       	rjmp	.+130    	; 0x164 <DIO_SetPinDirection+0xe8>
  e2:	27 b3       	in	r18, 0x17	; 23
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	02 c0       	rjmp	.+4      	; 0xee <DIO_SetPinDirection+0x72>
  ea:	88 0f       	add	r24, r24
  ec:	99 1f       	adc	r25, r25
  ee:	6a 95       	dec	r22
  f0:	e2 f7       	brpl	.-8      	; 0xea <DIO_SetPinDirection+0x6e>
  f2:	80 95       	com	r24
  f4:	82 23       	and	r24, r18
  f6:	87 bb       	out	0x17, r24	; 23
  f8:	08 95       	ret
  fa:	41 30       	cpi	r20, 0x01	; 1
  fc:	59 f4       	brne	.+22     	; 0x114 <DIO_SetPinDirection+0x98>
  fe:	24 b3       	in	r18, 0x14	; 20
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <DIO_SetPinDirection+0x8e>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	6a 95       	dec	r22
 10c:	e2 f7       	brpl	.-8      	; 0x106 <DIO_SetPinDirection+0x8a>
 10e:	82 2b       	or	r24, r18
 110:	84 bb       	out	0x14, r24	; 20
 112:	08 95       	ret
 114:	41 11       	cpse	r20, r1
 116:	26 c0       	rjmp	.+76     	; 0x164 <DIO_SetPinDirection+0xe8>
 118:	24 b3       	in	r18, 0x14	; 20
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_SetPinDirection+0xa8>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_SetPinDirection+0xa4>
 128:	80 95       	com	r24
 12a:	82 23       	and	r24, r18
 12c:	84 bb       	out	0x14, r24	; 20
 12e:	08 95       	ret
 130:	41 30       	cpi	r20, 0x01	; 1
 132:	59 f4       	brne	.+22     	; 0x14a <DIO_SetPinDirection+0xce>
 134:	21 b3       	in	r18, 0x11	; 17
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_SetPinDirection+0xc4>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_SetPinDirection+0xc0>
 144:	82 2b       	or	r24, r18
 146:	81 bb       	out	0x11, r24	; 17
 148:	08 95       	ret
 14a:	41 11       	cpse	r20, r1
 14c:	0b c0       	rjmp	.+22     	; 0x164 <DIO_SetPinDirection+0xe8>
 14e:	21 b3       	in	r18, 0x11	; 17
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <DIO_SetPinDirection+0xde>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	6a 95       	dec	r22
 15c:	e2 f7       	brpl	.-8      	; 0x156 <DIO_SetPinDirection+0xda>
 15e:	80 95       	com	r24
 160:	82 23       	and	r24, r18
 162:	81 bb       	out	0x11, r24	; 17
 164:	08 95       	ret

00000166 <DIO_TogglePin>:
	}
}

void DIO_TogglePin(u8 PortId,u8 PinId)
{
	switch(PortId)
 166:	81 30       	cpi	r24, 0x01	; 1
 168:	89 f0       	breq	.+34     	; 0x18c <DIO_TogglePin+0x26>
 16a:	28 f0       	brcs	.+10     	; 0x176 <DIO_TogglePin+0x10>
 16c:	82 30       	cpi	r24, 0x02	; 2
 16e:	c9 f0       	breq	.+50     	; 0x1a2 <DIO_TogglePin+0x3c>
 170:	83 30       	cpi	r24, 0x03	; 3
 172:	11 f1       	breq	.+68     	; 0x1b8 <DIO_TogglePin+0x52>
 174:	08 95       	ret
	{
		case DIO_PORTA:
		TOOGLE_BIT(PORTA,PinId);
 176:	2b b3       	in	r18, 0x1b	; 27
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <DIO_TogglePin+0x1c>
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	6a 95       	dec	r22
 184:	e2 f7       	brpl	.-8      	; 0x17e <DIO_TogglePin+0x18>
 186:	82 27       	eor	r24, r18
 188:	8b bb       	out	0x1b, r24	; 27
		break;
 18a:	08 95       	ret
		
		case DIO_PORTB:
		TOOGLE_BIT(PORTB,PinId);
 18c:	28 b3       	in	r18, 0x18	; 24
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <DIO_TogglePin+0x32>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <DIO_TogglePin+0x2e>
 19c:	82 27       	eor	r24, r18
 19e:	88 bb       	out	0x18, r24	; 24
		break;
 1a0:	08 95       	ret
		
		case DIO_PORTC:
		TOOGLE_BIT(PORTC,PinId);
 1a2:	25 b3       	in	r18, 0x15	; 21
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_TogglePin+0x48>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_TogglePin+0x44>
 1b2:	82 27       	eor	r24, r18
 1b4:	85 bb       	out	0x15, r24	; 21
		break;
 1b6:	08 95       	ret
		
		case DIO_PORTD:
		TOOGLE_BIT(PORTD,PinId);
 1b8:	22 b3       	in	r18, 0x12	; 18
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_TogglePin+0x5e>
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_TogglePin+0x5a>
 1c8:	82 27       	eor	r24, r18
 1ca:	82 bb       	out	0x12, r24	; 18
 1cc:	08 95       	ret

000001ce <EXTIN_enable>:
	INT1pcallback=ptr;
}

void EXTIN2_callback(void(*ptr)(void))
{
	INT2pcallback=ptr;
 1ce:	81 30       	cpi	r24, 0x01	; 1
 1d0:	61 f1       	breq	.+88     	; 0x22a <EXTIN_enable+0x5c>
 1d2:	20 f0       	brcs	.+8      	; 0x1dc <EXTIN_enable+0xe>
 1d4:	82 30       	cpi	r24, 0x02	; 2
 1d6:	09 f4       	brne	.+2      	; 0x1da <EXTIN_enable+0xc>
 1d8:	4f c0       	rjmp	.+158    	; 0x278 <EXTIN_enable+0xaa>
 1da:	08 95       	ret
 1dc:	61 30       	cpi	r22, 0x01	; 1
 1de:	69 f0       	breq	.+26     	; 0x1fa <EXTIN_enable+0x2c>
 1e0:	28 f0       	brcs	.+10     	; 0x1ec <EXTIN_enable+0x1e>
 1e2:	62 30       	cpi	r22, 0x02	; 2
 1e4:	89 f0       	breq	.+34     	; 0x208 <EXTIN_enable+0x3a>
 1e6:	63 30       	cpi	r22, 0x03	; 3
 1e8:	b1 f0       	breq	.+44     	; 0x216 <EXTIN_enable+0x48>
 1ea:	1b c0       	rjmp	.+54     	; 0x222 <EXTIN_enable+0x54>
 1ec:	85 b7       	in	r24, 0x35	; 53
 1ee:	81 60       	ori	r24, 0x01	; 1
 1f0:	85 bf       	out	0x35, r24	; 53
 1f2:	85 b7       	in	r24, 0x35	; 53
 1f4:	82 60       	ori	r24, 0x02	; 2
 1f6:	85 bf       	out	0x35, r24	; 53
 1f8:	14 c0       	rjmp	.+40     	; 0x222 <EXTIN_enable+0x54>
 1fa:	85 b7       	in	r24, 0x35	; 53
 1fc:	8e 7f       	andi	r24, 0xFE	; 254
 1fe:	85 bf       	out	0x35, r24	; 53
 200:	85 b7       	in	r24, 0x35	; 53
 202:	82 60       	ori	r24, 0x02	; 2
 204:	85 bf       	out	0x35, r24	; 53
 206:	0d c0       	rjmp	.+26     	; 0x222 <EXTIN_enable+0x54>
 208:	85 b7       	in	r24, 0x35	; 53
 20a:	81 60       	ori	r24, 0x01	; 1
 20c:	85 bf       	out	0x35, r24	; 53
 20e:	85 b7       	in	r24, 0x35	; 53
 210:	8d 7f       	andi	r24, 0xFD	; 253
 212:	85 bf       	out	0x35, r24	; 53
 214:	06 c0       	rjmp	.+12     	; 0x222 <EXTIN_enable+0x54>
 216:	85 b7       	in	r24, 0x35	; 53
 218:	8e 7f       	andi	r24, 0xFE	; 254
 21a:	85 bf       	out	0x35, r24	; 53
 21c:	85 b7       	in	r24, 0x35	; 53
 21e:	8d 7f       	andi	r24, 0xFD	; 253
 220:	85 bf       	out	0x35, r24	; 53
 222:	8b b7       	in	r24, 0x3b	; 59
 224:	80 64       	ori	r24, 0x40	; 64
 226:	8b bf       	out	0x3b, r24	; 59
 228:	08 95       	ret
 22a:	61 30       	cpi	r22, 0x01	; 1
 22c:	69 f0       	breq	.+26     	; 0x248 <EXTIN_enable+0x7a>
 22e:	28 f0       	brcs	.+10     	; 0x23a <EXTIN_enable+0x6c>
 230:	62 30       	cpi	r22, 0x02	; 2
 232:	89 f0       	breq	.+34     	; 0x256 <EXTIN_enable+0x88>
 234:	63 30       	cpi	r22, 0x03	; 3
 236:	b1 f0       	breq	.+44     	; 0x264 <EXTIN_enable+0x96>
 238:	1b c0       	rjmp	.+54     	; 0x270 <EXTIN_enable+0xa2>
 23a:	85 b7       	in	r24, 0x35	; 53
 23c:	84 60       	ori	r24, 0x04	; 4
 23e:	85 bf       	out	0x35, r24	; 53
 240:	85 b7       	in	r24, 0x35	; 53
 242:	88 60       	ori	r24, 0x08	; 8
 244:	85 bf       	out	0x35, r24	; 53
 246:	14 c0       	rjmp	.+40     	; 0x270 <EXTIN_enable+0xa2>
 248:	85 b7       	in	r24, 0x35	; 53
 24a:	8b 7f       	andi	r24, 0xFB	; 251
 24c:	85 bf       	out	0x35, r24	; 53
 24e:	85 b7       	in	r24, 0x35	; 53
 250:	88 60       	ori	r24, 0x08	; 8
 252:	85 bf       	out	0x35, r24	; 53
 254:	0d c0       	rjmp	.+26     	; 0x270 <EXTIN_enable+0xa2>
 256:	85 b7       	in	r24, 0x35	; 53
 258:	84 60       	ori	r24, 0x04	; 4
 25a:	85 bf       	out	0x35, r24	; 53
 25c:	85 b7       	in	r24, 0x35	; 53
 25e:	87 7f       	andi	r24, 0xF7	; 247
 260:	85 bf       	out	0x35, r24	; 53
 262:	06 c0       	rjmp	.+12     	; 0x270 <EXTIN_enable+0xa2>
 264:	85 b7       	in	r24, 0x35	; 53
 266:	8b 7f       	andi	r24, 0xFB	; 251
 268:	85 bf       	out	0x35, r24	; 53
 26a:	85 b7       	in	r24, 0x35	; 53
 26c:	87 7f       	andi	r24, 0xF7	; 247
 26e:	85 bf       	out	0x35, r24	; 53
 270:	8b b7       	in	r24, 0x3b	; 59
 272:	80 68       	ori	r24, 0x80	; 128
 274:	8b bf       	out	0x3b, r24	; 59
 276:	08 95       	ret
 278:	66 23       	and	r22, r22
 27a:	19 f0       	breq	.+6      	; 0x282 <EXTIN_enable+0xb4>
 27c:	61 30       	cpi	r22, 0x01	; 1
 27e:	29 f0       	breq	.+10     	; 0x28a <EXTIN_enable+0xbc>
 280:	07 c0       	rjmp	.+14     	; 0x290 <EXTIN_enable+0xc2>
 282:	84 b7       	in	r24, 0x34	; 52
 284:	80 64       	ori	r24, 0x40	; 64
 286:	84 bf       	out	0x34, r24	; 52
 288:	03 c0       	rjmp	.+6      	; 0x290 <EXTIN_enable+0xc2>
 28a:	84 b7       	in	r24, 0x34	; 52
 28c:	8f 7b       	andi	r24, 0xBF	; 191
 28e:	84 bf       	out	0x34, r24	; 52
 290:	8b b7       	in	r24, 0x3b	; 59
 292:	80 62       	ori	r24, 0x20	; 32
 294:	8b bf       	out	0x3b, r24	; 59
 296:	08 95       	ret

00000298 <EXTIN0_callback>:
 298:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <INT0pcallback+0x1>
 29c:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <INT0pcallback>
 2a0:	08 95       	ret

000002a2 <__vector_1>:
}

void __vector_1(void) __attribute__ ((signal));
void __vector_1(void)
{
 2a2:	1f 92       	push	r1
 2a4:	0f 92       	push	r0
 2a6:	0f b6       	in	r0, 0x3f	; 63
 2a8:	0f 92       	push	r0
 2aa:	11 24       	eor	r1, r1
 2ac:	2f 93       	push	r18
 2ae:	3f 93       	push	r19
 2b0:	4f 93       	push	r20
 2b2:	5f 93       	push	r21
 2b4:	6f 93       	push	r22
 2b6:	7f 93       	push	r23
 2b8:	8f 93       	push	r24
 2ba:	9f 93       	push	r25
 2bc:	af 93       	push	r26
 2be:	bf 93       	push	r27
 2c0:	ef 93       	push	r30
 2c2:	ff 93       	push	r31
	INT0pcallback();
 2c4:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <INT0pcallback>
 2c8:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <INT0pcallback+0x1>
 2cc:	09 95       	icall
}
 2ce:	ff 91       	pop	r31
 2d0:	ef 91       	pop	r30
 2d2:	bf 91       	pop	r27
 2d4:	af 91       	pop	r26
 2d6:	9f 91       	pop	r25
 2d8:	8f 91       	pop	r24
 2da:	7f 91       	pop	r23
 2dc:	6f 91       	pop	r22
 2de:	5f 91       	pop	r21
 2e0:	4f 91       	pop	r20
 2e2:	3f 91       	pop	r19
 2e4:	2f 91       	pop	r18
 2e6:	0f 90       	pop	r0
 2e8:	0f be       	out	0x3f, r0	; 63
 2ea:	0f 90       	pop	r0
 2ec:	1f 90       	pop	r1
 2ee:	18 95       	reti

000002f0 <__vector_2>:

void __vector_2(void) __attribute__ ((signal));
void __vector_2(void)
{
 2f0:	1f 92       	push	r1
 2f2:	0f 92       	push	r0
 2f4:	0f b6       	in	r0, 0x3f	; 63
 2f6:	0f 92       	push	r0
 2f8:	11 24       	eor	r1, r1
 2fa:	2f 93       	push	r18
 2fc:	3f 93       	push	r19
 2fe:	4f 93       	push	r20
 300:	5f 93       	push	r21
 302:	6f 93       	push	r22
 304:	7f 93       	push	r23
 306:	8f 93       	push	r24
 308:	9f 93       	push	r25
 30a:	af 93       	push	r26
 30c:	bf 93       	push	r27
 30e:	ef 93       	push	r30
 310:	ff 93       	push	r31
	INT1pcallback();
 312:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <INT1pcallback>
 316:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <INT1pcallback+0x1>
 31a:	09 95       	icall
}
 31c:	ff 91       	pop	r31
 31e:	ef 91       	pop	r30
 320:	bf 91       	pop	r27
 322:	af 91       	pop	r26
 324:	9f 91       	pop	r25
 326:	8f 91       	pop	r24
 328:	7f 91       	pop	r23
 32a:	6f 91       	pop	r22
 32c:	5f 91       	pop	r21
 32e:	4f 91       	pop	r20
 330:	3f 91       	pop	r19
 332:	2f 91       	pop	r18
 334:	0f 90       	pop	r0
 336:	0f be       	out	0x3f, r0	; 63
 338:	0f 90       	pop	r0
 33a:	1f 90       	pop	r1
 33c:	18 95       	reti

0000033e <__vector_3>:

void __vector_3(void) __attribute__ ((signal));
void __vector_3(void)
{
 33e:	1f 92       	push	r1
 340:	0f 92       	push	r0
 342:	0f b6       	in	r0, 0x3f	; 63
 344:	0f 92       	push	r0
 346:	11 24       	eor	r1, r1
 348:	2f 93       	push	r18
 34a:	3f 93       	push	r19
 34c:	4f 93       	push	r20
 34e:	5f 93       	push	r21
 350:	6f 93       	push	r22
 352:	7f 93       	push	r23
 354:	8f 93       	push	r24
 356:	9f 93       	push	r25
 358:	af 93       	push	r26
 35a:	bf 93       	push	r27
 35c:	ef 93       	push	r30
 35e:	ff 93       	push	r31
	INT2pcallback();
 360:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 364:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 368:	09 95       	icall
 36a:	ff 91       	pop	r31
 36c:	ef 91       	pop	r30
 36e:	bf 91       	pop	r27
 370:	af 91       	pop	r26
 372:	9f 91       	pop	r25
 374:	8f 91       	pop	r24
 376:	7f 91       	pop	r23
 378:	6f 91       	pop	r22
 37a:	5f 91       	pop	r21
 37c:	4f 91       	pop	r20
 37e:	3f 91       	pop	r19
 380:	2f 91       	pop	r18
 382:	0f 90       	pop	r0
 384:	0f be       	out	0x3f, r0	; 63
 386:	0f 90       	pop	r0
 388:	1f 90       	pop	r1
 38a:	18 95       	reti

0000038c <GI_enable>:
/*MCAL*/
 #include "GI_interface.h"
 
 void GI_enable(void)
 {
	 SET_BIT(SREG,7);
 38c:	8f b7       	in	r24, 0x3f	; 63
 38e:	80 68       	ori	r24, 0x80	; 128
 390:	8f bf       	out	0x3f, r24	; 63
 392:	08 95       	ret

00000394 <func>:
    }
}

void func(void)
{
	DIO_TogglePin(DIO_PORTD,DIO_PIN0);
 394:	60 e0       	ldi	r22, 0x00	; 0
 396:	83 e0       	ldi	r24, 0x03	; 3
 398:	0e 94 b3 00 	call	0x166	; 0x166 <DIO_TogglePin>
 39c:	08 95       	ret

0000039e <main>:

void func(void);

int main(void)
{
	DIO_SetPinDirection(DIO_PORTD,DIO_PIN0,DIO_PIN_OUTPUT);
 39e:	41 e0       	ldi	r20, 0x01	; 1
 3a0:	60 e0       	ldi	r22, 0x00	; 0
 3a2:	83 e0       	ldi	r24, 0x03	; 3
 3a4:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTD,DIO_PIN2,DIO_PIN_INPUT);
 3a8:	40 e0       	ldi	r20, 0x00	; 0
 3aa:	62 e0       	ldi	r22, 0x02	; 2
 3ac:	83 e0       	ldi	r24, 0x03	; 3
 3ae:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SetPinDirection>
	
	EXTIN0_callback(&func);
 3b2:	8a ec       	ldi	r24, 0xCA	; 202
 3b4:	91 e0       	ldi	r25, 0x01	; 1
 3b6:	0e 94 4c 01 	call	0x298	; 0x298 <EXTIN0_callback>
	EXTIN_enable(EXTIN0,RISING_EDGE);
 3ba:	60 e0       	ldi	r22, 0x00	; 0
 3bc:	80 e0       	ldi	r24, 0x00	; 0
 3be:	0e 94 e7 00 	call	0x1ce	; 0x1ce <EXTIN_enable>
	GI_enable();
 3c2:	0e 94 c6 01 	call	0x38c	; 0x38c <GI_enable>
 3c6:	ff cf       	rjmp	.-2      	; 0x3c6 <main+0x28>

000003c8 <_exit>:
 3c8:	f8 94       	cli

000003ca <__stop_program>:
 3ca:	ff cf       	rjmp	.-2      	; 0x3ca <__stop_program>
